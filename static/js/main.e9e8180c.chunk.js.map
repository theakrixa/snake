{"version":3,"sources":["index.js"],"names":["score","direction","bord","Array","fill","snake","food","Math","floor","random","Square","this","props","val","className","returnSquare","React","Component","Board","square","map","x","renS","Snake","state","s","interval","t","length","pop","i","alert","j","unshift","window","addEventListener","moveSomething","e","keyCode","removeEventListener","generatefood","movebord","checkgame","setInterval","setState","trial","clearInterval","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9e8180c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\n\r\nvar score = 0;\r\nvar direction = \"right\";\r\nvar bord = Array(400).fill(\"no\");\r\nvar snake = [];\r\nsnake[0] = 190;\r\nvar food = Math.floor(Math.random() * 400);\r\nclass Square extends React.Component {\r\n  returnSquare() {\r\n    if (this.props.val === \"head\") {\r\n      return <button className=\"head\"></button>;\r\n    }\r\n    if (this.props.val === \"body\") {\r\n      return <button className=\"body\"></button>;\r\n    }\r\n    if (this.props.val === \"no\") {\r\n      return <button className=\"no\"></button>;\r\n    }\r\n    if (this.props.val === \"food\") {\r\n      return <button className=\"food\"></button>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <span>{this.returnSquare()}</span>;\r\n  }\r\n}\r\nclass Board extends React.Component {\r\n  renS() {\r\n    const ab = this.props.square.map((x) => <Square val={x} />);\r\n    return ab;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"grid1\">\r\n          <h1>Score Is:{score}</h1>\r\n        </div>\r\n        <div className=\"grid\">{this.renS()}</div>\r\n        <div className=\"grid2\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Snake extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      s: bord,\r\n      interval: null,\r\n    };\r\n  }\r\n  generatefood() {\r\n    if (snake[0] === food) {\r\n      ++score;\r\n       food =Math.floor(Math.random() * 400);\r\n      for (let t = 0; t < snake.length; t++)\r\n      {\r\n        if (food === snake[t]) {\r\n          food=Math.floor(Math.random() * 400);\r\n          t=0;\r\n        }\r\n    }\r\n   } else {\r\n      snake.pop();\r\n    }\r\n  \r\n}\r\n  checkgame() {\r\n    for (let i = 1; i < snake.length; i++)\r\n      if (snake[0] === snake[i]) {\r\n        bord.fill(\"no\");\r\n        alert(\r\n          \"Game Over \\n Your score is:\" + score + \"\\n press OK for a new game\"\r\n        );\r\n        score = 0;\r\n        let j = snake[0];\r\n        snake = [];\r\n        snake[0] = j;\r\n      }\r\n  }\r\n  movebord() {\r\n    snake.unshift(snake[0]);\r\n    window.addEventListener(\"keydown\", moveSomething, false);\r\n    function moveSomething(e) {\r\n      switch (e.keyCode) {\r\n        case 37:\r\n          if (direction !== \"right\") {\r\n            direction = \"left\";\r\n          }\r\n          break;\r\n        case 38:\r\n          if (direction !== \"down\") {\r\n            direction = \"up\";\r\n          }\r\n          break;\r\n        case 39:\r\n          if (direction !== \"left\") {\r\n            direction = \"right\";\r\n          }\r\n          break;\r\n        case 40:\r\n          if (direction !== \"up\") {\r\n            direction = \"down\";\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      window.removeEventListener('keydown',moveSomething,false);\r\n    }\r\n    switch (direction) {\r\n      case \"right\":\r\n        if (snake[0] % 20 === 19) {\r\n          snake[0] = snake[0] - 20;\r\n        }\r\n        snake[0]++;\r\n        break;\r\n      case \"left\":\r\n        if (snake[0] % 20 === 0) {\r\n          snake[0] = snake[0] + 20;\r\n        }\r\n        snake[0] = snake[0] - 1;\r\n        break;\r\n\r\n      case \"up\":\r\n        if (snake[0] < 20) {\r\n          snake[0] = snake[0] + 400;\r\n        }\r\n        snake[0] = snake[0] - 20;\r\n\r\n        break;\r\n      case \"down\":\r\n        if (snake[0] > 379) {\r\n          snake[0] = snake[0] - 400;\r\n        }\r\n        snake[0] = snake[0] + 20;\r\n        break;\r\n      default:\r\n    }\r\n    this.generatefood();\r\n  }\r\n  trial() {\r\n    bord.fill(\"no\");\r\n    this.movebord();\r\n    bord[snake[0]] = \"head\";\r\n    for (let i = 1; i < snake.length; i++) {\r\n      bord[snake[i]] = \"body\";\r\n    }\r\n    bord[food] = \"food\";\r\n    this.checkgame();\r\n    return bord;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Board square={this.state.s} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.setState({ s: this.trial() }), 200);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\nconst el = <Snake />;\r\nReactDOM.render(el, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}